#!/bin/sh

# TODO common dialog
# TODO use common klik config for mount point
# TODO optionally set filesystems to mount in common config
# TODO use config to setup /mnt/app, it's location, permissions etc
# TODO use FLL_LOOP_DEVICES

FLL_KLIK_FSTAB_ENABLE="Y"
FLL_KLIK_MOUNT="/mnt/app"
FLL_KLIK_MOUNT_OWNER="root"
FLL_KLIK_MOUNT_GROUP="root"
FLL_KLIK_MOUNT_PERM="ugo+rwx"
FLL_LOOP_DEVICES="7"

[ -e /etc/fullstory/fll.conf ] && . /etc/fullstory/fll.conf
[ -e /etc/klik.conf ] && . /etc/klik.conf
[ -e $HOME/.klik.conf ] && . $HOME/.klik.conf

if [ -z "$DIALOG" ] ; then
# Determine which dialog to use in which situation:
# Xdialog (in all other cases)
DIALOG=Xdialog
# kdialog (in case there is no console available and we are running KDE)
( ps -e 2>/dev/null | grep kdeinit >/dev/null 2>&1 ) &&  DIALOG=kdialog 
# dialog (in case there is a console available)
GUIMODE=$(tty)
( echo $GUIMODE | grep /dev/tty[:digit:] >/dev/null ) && DIALOG=dialog
fi

# Setup defaults for whatever dialog we are using
case $DIALOG in
 kdialog)
 DIALOG_OPTIONS=" --caption klik" ;
 KLIKDIR=":klikdir" ;;
 Xdialog|dialog)
 DIALOG_H=12
 DIALOG_W=60
 DIALOG_OPTIONS=" $DIALOG_H $DIALOG_W" ;
 KLIKDIR="~" ;;
esac

dmsgbox(){
 $DIALOG --msgbox "$1" $DIALOG_OPTIONS
}

if [ "$FLL_KLIK_FSTAB_ENABLE" = "true" ]; then
  FSTABOK=$(grep $FLL_KLIK_MOUNT/7 /etc/fstab)
  if [ -z "$FSTABOK" ]; then
    echo >> /etc/fstab "
$FLL_KLIK_MOUNT/1/image $FLL_KLIK_MOUNT/1 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
$FLL_KLIK_MOUNT/2/image $FLL_KLIK_MOUNT/2 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
$FLL_KLIK_MOUNT/3/image $FLL_KLIK_MOUNT/3 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
$FLL_KLIK_MOUNT/4/image $FLL_KLIK_MOUNT/4 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
$FLL_KLIK_MOUNT/5/image $FLL_KLIK_MOUNT/5 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
$FLL_KLIK_MOUNT/6/image $FLL_KLIK_MOUNT/6 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
$FLL_KLIK_MOUNT/7/image $FLL_KLIK_MOUNT/7 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
"
  fi
  if ! [ -e $FLL_KLIK_MOUNT ]
  then
    mkdir $FLL_KLIK_MOUNT
  fi
  OWN=$(ls -ld $FLL_KLIK_MOUNT | awk {print $3)
  GRP=$(ls -ld $FLL_KLIK_MOUNT | awk {print $4)
  if ! [ "$OWN" = "$FLL_KLIK_MOUNT_OWNER" -a "$GRP" = "$FLL_KLIK_MOUNT_GROUP" ]; then
    chown $FLL_KLIK_MOUNT_OWNER.$FLL_KLIK_MOUNT_GROUP $FLL_KLIK_MOUNT
  fi
  chmod $FLL_KLIK_MOUNT_PERM $FLL_KLIK_MOUNT
  if [ "$FLL_KLIK_MOUNT_GROUP" = "klik" -a -z "$(grep ^klik /etc/groups)" ]; then
    addgroup klik
    for KLIKUSER in $FLL_KLIK_MOUNT_USERS; do
      adduser $KLIKUSER klik
    done
  fi
fi
